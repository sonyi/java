
1、变量的范围

   全局变量和局部变量

   全局变量：有默认值，类加载时会自动初始化

   局部变量：要使用它，必须初始化

2、方法

   主方法main

   普通方法

   
3、数组

  一维数组

  类型[] 数组名 = new 类型[个数];

  数组的下标是从0开始,范围：0~n-1

  数组有长度的属性：length


  数组的排序 ： 冒泡排序、快速排序、插入排序、选择排序。。。。

   冒泡排序的算法--相邻两个数进行比较

 
  数组初始化：动态初始化和静态初始化

     动态初始化

        char[] c = new char[3];

        c[1] = 'A';

    静态初始化
  
        int[] i1 = new int[]{1,2,3};



  内存--堆内存、栈内存、静态区


  二维数组

  类型[][]  数组名 = new 类型[行数][列数];


  double[][] arr = new double[4][2]; 
 
  arr[0][1] = 10;//第一行第二列



  注意：

  1、行数必须要有

  2、循环 双重for  

  3、行数 arr.length; 第一行有几列  arr[0].length


  初始化：静态初始化和动态初始化

    
    动态初始化

      double[][] d = new double[3][4];

      d[0][1] = 10;

      d[1] = new double[]{1,2};

   静态初始化

      double[][] d2 = new double[][]{{1,2},{3,4,5},{6,7,8,9}};


==================================

   面向对象特征：继承、封装、多态

   类  抽象 （模板）

   对象 具体（万事万物皆对象）


   类：一组具有相同属性和相同方法的对象的集合。

   对象：类的实例化，有属性和方法构成。


   人类 {
    眼睛；
    头发；
    耳朵；

    吃饭;
    走路；

   }


  对象创建：

     类型  对象名；//声明

     对象名 = new 类型();//实例化


     类型  对象名 = new 类型();//实例化

     
     对象名---引用类型，存放在栈里面，存放的是地址


   对象引用：

     访问属性  对象名.属性

     访问方法  对象名.方法();



    类型  对象名 = new 构造方法();//实例化


    构造方法 ： 

     1、如果在类里面没有写，java会自动给一个无参数的构造方法；如果自己有定义，系统就不会再默认，而是根据你写的方法。

     2、构造方法的方法名必须和类名一致

     3、构造方法不能有返回值

    权限修饰符 方法名(参数列表) {


    }


    注意：属性通常都设为私有，要通过方法修改属性。


 this 关键字

   1、指当前对象

   2、不能放在静态方法里面

   3、当局部变量和成员变量（全局变量）重名时，如果想访问成员变量就要通过  this.属性

   4、如果this调用构造方法，必须放在首行



  *对象之间不会互相影响















