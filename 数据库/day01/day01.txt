数据库包括：
Oracle, Sybase, SQL Server, DB2, Access 等等。

SQL DML 和 DDL
可以把 SQL 分为两个部分：数据操作语言 (DML) 和 数据定义语言 (DDL)。
1.
SQL (结构化查询语言)是用于执行查询的语法。但是 SQL 语言也包含用于更新、插入和删除记录的语法。
查询和更新指令构成了 SQL 的 DML 部分：
SELECT - 从数据库表中获取数据
UPDATE - 更新数据库表中的数据
DELETE - 从数据库表中删除数据
INSERT INTO - 向数据库表中插入数据

2.
SQL 的数据定义语言 (DDL) 部分使我们有能力创建或删除表格。我们也可以定义索引（键），规定表之间的链接，以及施加表间的约束。
SQL 中最重要的 DDL 语句:
CREATE DATABASE - 创建新数据库
ALTER DATABASE - 修改数据库
CREATE TABLE - 创建新表
ALTER TABLE - 变更（改变）数据库表
DROP TABLE - 删除表
CREATE INDEX - 创建索引（搜索键）
DROP INDEX - 删除索引

-----------------------------

常用的操作
 
   显示数据库  show databases;
   创建数据库  create database 数据库名;
   删除数据库  drop database 数据库名;
   打开数据库  use 数据库名;
   
   显示表      show tables;
   显示表结构信息  desc 表名;

   创建表 
               create table 表名(
                   列名1  字段类型  字段约束,
                   列名2  字段类型  字段约束,
                   列名3  字段类型  字段约束,
                   ...
                   列名n  字段类型  字段约束
               );
 
   删除表  drop table 表名；

  举例：

   create database mytest;
   use mytest;

   create table books(
      bookId  int,
      bookName varchar(50),
      bookPrice decimal(8,2)
   );

   drop table books;

  --往表里面加入数据
  格式：
    insert into 表名(列名1,列名2,...,列名n)
      values(值1,值2,...,值n);

    insert into 表名 values(值1,值2,...,值n);

    insert into 表名(列名1,列名2) values(值1,值2);


  insert into books(bookId,bookName,bookPrice)
     values(1,'java编程思想',100);
  insert into books(bookId,bookName,bookPrice)
     values(2,'java习题集',15);
  insert into books(bookId,bookName,bookPrice)
     values(3,'java核心技术',50);

  insert into books values(4,'android应用',60);
  insert into books(bookId,bookName) values(5,'android开发');

  --查询表数据
    select * from 表名 where 条件表达式;
  
    select 列名 from 表名 where 条件表达式;

   select * from books where 1<>1;
   select * from books where 1=1;
   select * from books where bookPrice>50;
   select * from books where bookId=1;
   select * from books where bookName='java习题集';

  --修改表数据
    update 表名 set [列名1=值1,列名2=值2]
      where 条件表达式；


  update books set bookprice=150
      where bookId=1 and bookName='java习题集';

  update books set bookprice=150
      where bookId=1 or bookName='java习题集';

  --删除表数据
    delete from 表名
       where 条件表达式;

    delete from books where bookPrice is null;

  --关键词 DISTINCT 用于返回唯一不同的值。
    SELECT DISTINCT 列名称 FROM 表名称
    SELECT DISTINCT * FROM 表名称

  --order by 排序
 
    select * from 表名 
        where 条件表达式 
        order by 列名 [asc|desc];
   
    --按书的价格升序排序
      select * from books
         where bookName is not null
         order by bookPrice asc;
    --按书的价格降序排序
      select * from books
         where bookName is not null
         order by bookPrice desc;

 ------------------------

数据类型

1.整数类型
TINYINT 1 字节 
SMALLINT 2 字节 
MEDIUMINT 3 字节 
INT或INTEGER 4 字节
BIGINT 8 字节

2.浮点数
DECIMAL 对DECIMAL(M,D) ，
        如果M>D，为M+2否则为D+2 依赖于M和D的值 依赖于M和D的值 小数值

3.字符串类型
CHAR 0-255字节 定长字符串 
VARCHAR 0-255字节 变长字符串
BLOB 0-65 535字节 二进制形式的长文本数据 
TEXT 0-65 535字节 长文本数据 
LOGNGBLOB 0-4 294 967 295字节 二进制形式的极大文本数据 
LONGTEXT 0-4 294 967 295字节 极大文本数据

4.日期和时间类型
DATETIME 8 1000-01-01 00:00:00/9999-12-31 23:59:59 YYYY-MM-DD HH:MM:SS 混合日期和时间值 
TIMESTAMP 8 1970-01-01 00:00:00/2037 年某时 YYYYMMDD HHMMSS 混合日期和时间值，时间戳


  create table person(
     pId int NOT NULL PRIMARY KEY,
     pName varchar(30),
     pAge int,
     pSex char(1),
     pDesc varchar(100)

  );

-------------------
字段约束
1.NOT NULL 不能为空
2.UNIQUE 约束唯一标识数据库表中的每条记录
3.default
4.PRIMARY KEY 约束唯一标识数据库表中的每条记录。
  主键必须包含唯一的值。
  主键列不能包含 NULL 值。
  --添加主键
   ALTER TABLE books ADD PRIMARY KEY (bookId);
  --删除主键
   ALTER TABLE books DROP PRIMARY KEY

5.FOREIGN KEY
  一个表中的 FOREIGN KEY 指向另一个表中的 PRIMARY KEY
  可以理解成：子表关联主表
  ----如果想删除主表，首先必须先删除子表的内容，然后才能删除主表的内容

6.CHECK
  --添加约束
   ALTER TABLE staff
     ADD CONSTRAINT chk_staff CHECK (salary>1000);
  --撤销约束
   ALTER TABLE staff DROP CHECK chk_staff;

举例：

drop table person;
create table person(
     pId int NOT NULL PRIMARY KEY,
     pName varchar(30),
     pAge int,
     pSex char(1),
     pDesc varchar(100) default '信息有待补充'

  );

或者
create table person(
     pId int NOT NULL,
     pName varchar(30),
     pAge int,
     pSex char(1),
     pDesc varchar(100),
     PRIMARY KEY (pId)

  );
 

   insert into person(pId,pName,pAge,pSex,pDesc)
       values(1,'黎明',45,'男','');
   insert into person(pId,pName,pAge,pSex)
       values(2,'国荣',25,'男');
   insert into person(pId,pName,pAge)
       values(3,'卢敏',25);

   --部门
   create table depart(
       depId int not null primary key,
       depName varchar(50)

   );
   --员工表
   create table staff(
       sId int not null primary key,
       sName varchar(50),
       sSex char(1),
       salary DECIMAL(10,2),
       depId int,
       FOREIGN KEY (depId) REFERENCES depart(depId)
   );
  
   insert into depart values(1001,'行政部');
   insert into depart values(1002,'技术部');

   insert into staff(sId,sName,sSex,salary,depId)
      values(1,'国荣','男',2000,1001);
   insert into staff(sId,sName,sSex,salary,depId)
      values(2,'辛乙','男',8000,1002);
   insert into staff(sId,sName,sSex,salary)
      values(3,'卢敏','男',4000);
   insert into staff(sId,sName,sSex,salary,depId)
      values(4,'胡锦涛','男',400,1001);