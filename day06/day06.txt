面向对象三大特征 ： 继承、封装、多态

  class 类名{
     属性；

     方法；

  }


   方法：


     public void setName(String name) {
        this.name = name;

     }


     public String getName() {
      
        return "";
     }


    public void setAge(int age) {

         this.age = age;
     }


    public int getAge() {
        return age;

    }


   对象创建：
      
      类名 对象名 = new 构造方法();

      1、类名 对象名;
         对象名 = new 类名(); 
 
      2、类名 对象名 = new 类名();
 

      属性： 对象名.属性

      方法： 对象名.方法


  构造方法:

    1、方法名必须和类名一致

    2、不能有返回类型


  this 关键字：

    1、不能静态方法中

    2、指当前对象

    3、当局部变量和成员变量重名时，要访问成员变量，必须通过'this.属性'

    4、this();
    


  全局变量：静态变量（类变量）和成员变量（对象变量）

     1、静态变量： 类一加载就存在，而且是在静态区，可以理解为共享的变量

     2、成员变量:  依附于对象而存在，对象消失成员变量也就跟着消失 ，只能通过对象来访问，非静态变量




  方法的重载（overload） 必须满足下面两个条件：

     1、方法名必须相同

     2、参数个数或参数类型要不一样


========================================

继承  

   子类  

   父类


   特点：

    1、只能单继承

    2、一个子类只能继承一个父类

    3、一个父类可以被多个子类继承

    4、继承的关键字 extends

   class 子类 extends 父类{


   }
  

   子类继承父类：能够访问到父类里面非私有的全部属性和方法


  为什么要用继承？ 继承有哪些好处？


  子类继承父类之后，谁先运行？


 super关键字  

   1、指父类的当前对象

   2、调用父类的构造方法时，要放在首行

   3、不能放在静态方法中

   4、当子类和父类的属性或方法重名的时候，父类的属性和方法会被隐藏，

      如果想访问父类的属性和方法，必须通过  "super.属性 或 super.方法"


方法重写 override，必须满足以下条件：

   1、方法名、参数类型、参数个数、返回值类型必须一样

   2、修饰权限不能比父类要求跟严格

   3、重写只存在继承关系当中









   